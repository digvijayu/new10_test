{"version":3,"sources":["utils/constants.js","reducers/index.js","components/Text/index.js","components/Select/index.js","components/RangeSelector/index.js","utils/index.js","components/CurrencyInput/index.js","pages/Home.js","actions/index.js","App.js","serviceWorker.js","index.js"],"names":["SUPPORTED_LANGUAGES","TERMS","getMaxAmount","selectedTarget","businessForm","getMaxDuration","getRateOfInterest","amount","duration","interestArray","initialAppState","error","message","maxFinancingValue","maxDuration","selectedDuration","selectedAmount","rateOfInterest","combineReducers","appReducer","state","arguments","length","undefined","action","type","Object","objectSpread","maxAmount","maxAmountTargetChange","selectedAmountTargetChange","val","financingValue","dur","durationValue","Text","_this$props","this","props","children","values","react_default","a","createElement","index_es","id","defaultMessage","text","Component","Select","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selected","e","setState","target","value","onChange","nextProps","options","Fragment","map","option","index","key","className","handleOnSelectChange","bind","renderOptions","RangeSelector","min","parseFloat","max","steps","handleOnChange","numberWithCommas","num","toString","replace","getLanguage","language","navigator","split","indexOf","isSupportedLanguage","CurrencyInput","isFocussed","textNum","number","test","isNaN","str","convertTextToNumber","_this$props2","onBlur","handleOnBlur","onFocus","handleOnFocus","Home","newAmount","changeFinancingValue","newTarget","changeTarget","newForm","changeBusinessForm","newDuration","getMonthText","changeDurationValue","parseInt","components_Text","onClick","onChangeLang","components_Select","handleOnTargetChange","handleOnBusinessFormChange","components_CurrencyInput","handleOnAmountChange","components_RangeSelector","filter","item","handleOnDurationChange","handleOnDurationChangeFromNum","href","intl","formatMessage","connect","dispatch","appError","injectIntl","messages","nl","en","addLocaleData","concat","toConsumableArray","locale_en","locale_nl","store","createStore","rootReducer","App","lang","es","locale","pages_Home","handleOnLangChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6aba35fb.chunk.js","sourcesContent":["export const SUPPORTED_LANGUAGES = ['en', 'nl'];\n\nexport const DEFAULT_LANGUAGE = SUPPORTED_LANGUAGES[0];\n\nexport const PRODUCT_MARKETING = 'Marketing';\nexport const PRODUCT_EQUIPMENT = 'Equipment';\n\nexport const LEGAL_BV = 'BV';\nexport const LEGAL_EENMANSZAK = 'Eenmanszak';\n\nexport const TERMS = [3, 6, 9, 12, 24, 36, 48, 60];\n\nexport const MIN_AMT = 20000;\n","import { combineReducers } from 'redux';\nimport {\n  PRODUCT_MARKETING,\n  PRODUCT_EQUIPMENT,\n  LEGAL_BV,\n  TERMS\n} from './../utils/constants';\n\nexport const getMaxAmount = (selectedTarget, businessForm) => {\n  return selectedTarget === PRODUCT_EQUIPMENT && businessForm === LEGAL_BV\n    ? 500000\n    : 250000;\n};\n\nexport const getMaxDuration = selectedTarget => {\n  return selectedTarget === PRODUCT_MARKETING ? 36 : 60;\n};\n\nexport const getRateOfInterest = (amount, duration) => {\n  let interestArray = [];\n  if (amount < 50000) {\n    interestArray = [6, 7, 8];\n  } else if (amount < 150000 && amount >= 50000) {\n    interestArray = [5, 6, 7];\n  } else {\n    interestArray = [4, 5, 6];\n  }\n  if (duration <= 20) {\n    return interestArray[0];\n  } else if (duration <= 40 && duration > 20) {\n    return interestArray[1];\n  } else {\n    return interestArray[2];\n  }\n};\n\nexport const initialAppState = {\n  error: {\n    message: ''\n  },\n  selectedTarget: PRODUCT_MARKETING,\n  businessForm: LEGAL_BV,\n  maxFinancingValue: getMaxAmount(PRODUCT_MARKETING, LEGAL_BV),\n  maxDuration: getMaxDuration(PRODUCT_MARKETING),\n  selectedDuration: TERMS[3],\n  selectedAmount: getMaxAmount(PRODUCT_MARKETING, LEGAL_BV),\n  rateOfInterest: getRateOfInterest(\n    getMaxAmount(PRODUCT_MARKETING, LEGAL_BV),\n    TERMS[3]\n  )\n};\n\nexport const appReducer = (\n  state = initialAppState,\n  action = { type: 'NO_TYPE' }\n) => {\n  switch (action.type) {\n    case 'APPLICATION_ERROR':\n      return {\n        ...state,\n        error: { message: action.message }\n      };\n    case 'SELECT_TARGET_CHANGE':\n      const maxAmount = getMaxAmount(action.selectedTarget, state.businessForm);\n      const maxDuration = getMaxDuration(action.selectedTarget);\n      const selectedAmount =\n        state.selectedAmount > maxAmount ? maxAmount : state.selectedAmount;\n      const selectedDuration =\n        state.selectedDuration > maxDuration\n          ? maxDuration\n          : state.selectedDuration;\n      return {\n        ...state,\n        selectedTarget: action.selectedTarget,\n        maxFinancingValue: maxAmount,\n        maxDuration: maxDuration,\n        selectedDuration: selectedDuration,\n        selectedAmount: selectedAmount,\n        rateOfInterest: getRateOfInterest(selectedAmount, selectedDuration)\n      };\n    case 'BUSINESS_FROM_TARGET_CHANGE':\n      const maxAmountTargetChange = getMaxAmount(\n        state.selectedTarget,\n        action.businessForm\n      );\n      const selectedAmountTargetChange =\n        state.selectedAmount > maxAmountTargetChange\n          ? maxAmountTargetChange\n          : state.selectedAmount;\n      return {\n        ...state,\n        businessForm: action.businessForm,\n        maxFinancingValue: maxAmountTargetChange,\n        selectedAmount: selectedAmountTargetChange,\n        rateOfInterest: getRateOfInterest(\n          selectedAmountTargetChange,\n          state.selectedDuration\n        )\n      };\n    case 'FINANCING_VALUE_CHANGE':\n      let val =\n        action.financingValue >\n        getMaxAmount(state.selectedTarget, state.businessForm)\n          ? getMaxAmount(state.selectedTarget, state.businessForm)\n          : action.financingValue;\n      return {\n        ...state,\n        selectedAmount: val,\n        rateOfInterest: getRateOfInterest(val, state.selectedDuration)\n      };\n    case 'DURATION_VALUE_CHANGE':\n      let dur =\n        action.durationValue > getMaxDuration(state.selectedTarget)\n          ? getMaxDuration(state.selectedTarget)\n          : action.durationValue;\n      return {\n        ...state,\n        selectedDuration: dur,\n        rateOfInterest: getRateOfInterest(state.selectedAmount, dur)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  appReducer\n});\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nclass Text extends Component {\n  render() {\n    const { children, values } = this.props;\n    return (\n      <FormattedMessage id={children} values={values} defaultMessage={children}>\n        {text => text}\n      </FormattedMessage>\n    );\n  }\n}\n\nexport default Text;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      val: props.selected\n    };\n  }\n\n  handleOnSelectChange(e) {\n    this.setState({\n      ...this.state,\n      val: e.target.value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(e.target.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...this.state,\n      val: nextProps.selected\n    });\n  }\n\n  renderOptions() {\n    const { options } = this.props;\n    return (\n      <>\n        {options.map((option, index) => {\n          return (\n            <option value={option} key={index}>\n              {option}\n            </option>\n          );\n        })}\n      </>\n    );\n  }\n\n  render() {\n    const { val } = this.state;\n    return (\n      <select\n        className=\"nl-select\"\n        onChange={this.handleOnSelectChange.bind(this)}\n        value={val}\n      >\n        {this.renderOptions()}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  selected: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nclass RangeSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || props.min\n    };\n  }\n\n  handleOnChange(e) {\n    this.setState({\n      ...this.state,\n      value: e.target.value\n    });\n\n    if (this.props.onChange) {\n      this.props.onChange(parseFloat(e.target.value));\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  render() {\n    const { min, max, steps } = this.props;\n    const { value } = this.state;\n    return (\n      <div>\n        <input\n          className=\"nt-range-selector\"\n          type=\"range\"\n          min={min}\n          max={max}\n          steps={steps}\n          value={value}\n          onChange={this.handleOnChange.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nRangeSelector.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  steps: PropTypes.number,\n  value: PropTypes.number,\n  onChange: PropTypes.func\n};\n\nexport default RangeSelector;\n","import { SUPPORTED_LANGUAGES } from './constants';\n\nexport const isSupportedLanguage = language =>\n  SUPPORTED_LANGUAGES.indexOf(language) > -1;\n\nexport const isFloat = val => {\n  var floatRegex = /^[-+]?[0-9]*\\.?[0-9]+$/;\n  if (!floatRegex.test(val)) return false;\n\n  val = parseFloat(val);\n  if (isNaN(val)) return false;\n  return true;\n};\n\nexport const numberWithCommas = num => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const removeComma = str => str.replace(/,/g, '');\n\nexport const getLanguage = () => {\n  let language = navigator.language.split(/[-_]/)[0]; // language without region code\n  return isSupportedLanguage(language) ? language : 'en';\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isFloat, numberWithCommas, removeComma } from './../../utils';\nimport './style.scss';\n\nclass CurrencyInput extends Component {\n  constructor(props) {\n    super(props);\n    const val = props.value || 0;\n    this.state = {\n      value: val,\n      text: numberWithCommas(val),\n      isFocussed: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      if (this.state.isFocussed) {\n        this.setState({\n          ...this.state,\n          value: nextProps.value,\n          text: nextProps.value.toString()\n        });\n      } else {\n        this.setState({\n          ...this.state,\n          value: nextProps.value,\n          text: numberWithCommas(nextProps.value)\n        });\n      }\n    }\n  }\n\n  handleOnChange(e) {\n    const textNum = e.target.value;\n    const { min, max } = this.props;\n    this.setState({\n      ...this.state,\n      text: textNum\n    });\n    const number = parseFloat(textNum);\n    if (\n      isFloat(textNum) &&\n      this.props.onChange &&\n      number >= min &&\n      number <= max\n    ) {\n      this.props.onChange(parseFloat(textNum));\n    }\n  }\n\n  handleOnFocus() {\n    this.setState({\n      ...this.state,\n      isFocussed: true,\n      text: removeComma(this.state.text)\n    });\n  }\n\n  handleOnBlur(e) {\n    const textNum = this.convertTextToNumber(e.target.value);\n    const { min, max } = this.props;\n    let number = parseFloat(textNum);\n    if (number < min) {\n      number = min;\n    }\n\n    if (number > max) {\n      number = max;\n    }\n\n    if (!isNaN(number)) {\n      // send an update outside\n      this.setState({\n        ...this.state,\n        value: number,\n        text: numberWithCommas(number),\n        isFocussed: false\n      });\n      if (this.props.onChange) {\n        this.props.onChange(number);\n      }\n    } else {\n      this.setState({\n        ...this.state,\n        value: min,\n        text: numberWithCommas(min),\n        isFocussed: false\n      });\n    }\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"nt-row-unchanged nt-currency-input-container\">\n        <div className=\"nt-symbol\">€</div>\n        <div className=\"nt-input-col\">\n          <input\n            className=\"nt-currency-input\"\n            type=\"text\"\n            value={text}\n            onChange={this.handleOnChange.bind(this)}\n            onBlur={this.handleOnBlur.bind(this)}\n            onFocus={this.handleOnFocus.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  convertTextToNumber(textNum) {\n    textNum = textNum.replace(/[^0-9.]/g, '');\n    textNum = textNum.replace(/\\.+/g, '.');\n    textNum = textNum.replace(/(.*\\.[0-9][0-9][0-9]?).*/g, '$1');\n    textNum = textNum.replace(/^0+(.*)$/, '0$1');\n    textNum = textNum.replace(/^0([^.].*)$/, '$1');\n    return textNum;\n  }\n}\n\nCurrencyInput.propTypes = {\n  value: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func\n};\n\nexport default CurrencyInput;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\n\nimport {\n  appError,\n  changeTarget,\n  changeBusinessForm,\n  changeFinancingValue,\n  changeDurationValue\n} from './../actions';\nimport './style.scss';\nimport Text from './../components/Text';\nimport Select from './../components/Select';\nimport RangeSelector from './../components/RangeSelector';\nimport CurrencyInput from './../components/CurrencyInput';\nimport {\n  PRODUCT_MARKETING,\n  PRODUCT_EQUIPMENT,\n  LEGAL_BV,\n  LEGAL_EENMANSZAK,\n  TERMS,\n  MIN_AMT\n} from './../utils/constants';\n\nclass Home extends Component {\n  handleOnAmountChange(newAmount) {\n    this.props.changeFinancingValue(newAmount);\n  }\n\n  handleOnTargetChange(newTarget) {\n    this.props.changeTarget(newTarget);\n  }\n\n  handleOnBusinessFormChange(newForm) {\n    this.props.changeBusinessForm(newForm);\n  }\n\n  handleOnDurationChange(newDuration) {\n    let duration = TERMS[3];\n    for (let index = 0; index < TERMS.length; index++) {\n      if (newDuration === '' + TERMS[index] + this.getMonthText()) {\n        duration = TERMS[index];\n        break;\n      }\n    }\n    this.props.changeDurationValue(parseInt(duration));\n  }\n\n  handleOnDurationChangeFromNum(newDuration) {\n    let duration = TERMS[3];\n    for (let index = 0; index < TERMS.length; index++) {\n      if (newDuration >= TERMS[index]) {\n        duration = TERMS[index];\n      }\n    }\n    this.props.changeDurationValue(duration);\n  }\n\n  render() {\n    const {\n      selectedTarget,\n      businessForm,\n      maxFinancingValue,\n      maxDuration,\n      selectedDuration,\n      selectedAmount,\n      rateOfInterest\n    } = this.props;\n\n    return (\n      <div className=\"nt-home-page nt-ma-4\">\n        <div className=\"nt-title nt-font-2 bold text-center\">\n          <Text>title</Text>\n        </div>\n\n        <div\n          className=\"text-right nt-mt-2\"\n          onClick={() => {\n            this.props.onChangeLang();\n          }}\n        >\n          <span className=\"nl-primary-link\">\n            <Text>change.lang</Text>\n          </span>\n        </div>\n\n        <div className=\"nt-row\">\n          <div className=\"nt-row-item nt-left-row-padding\">\n            <div className=\"nl-label\">\n              <Text>target</Text>\n            </div>\n            <div>\n              <Select\n                options={[PRODUCT_MARKETING, PRODUCT_EQUIPMENT]}\n                selected={selectedTarget}\n                onChange={this.handleOnTargetChange.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"nt-row-item nt-right-row-padding\">\n            <div className=\"nl-label\">\n              <Text>business.form</Text>\n            </div>\n            <div>\n              <Select\n                options={[LEGAL_BV, LEGAL_EENMANSZAK]}\n                selected={businessForm}\n                onChange={this.handleOnBusinessFormChange.bind(this)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div className=\"nt-row\">\n            <div className=\"nt-row-item nl-label nt-left-row-padding\">\n              <Text>Financing</Text>\n            </div>\n            <div className=\"nt-row-item nt-right-row-padding nt-right-col\">\n              <CurrencyInput\n                onChange={this.handleOnAmountChange.bind(this)}\n                value={selectedAmount}\n                min={MIN_AMT}\n                max={maxFinancingValue}\n              />\n            </div>\n          </div>\n\n          <div>\n            <RangeSelector\n              min={MIN_AMT}\n              max={maxFinancingValue}\n              value={selectedAmount}\n              onChange={this.handleOnAmountChange.bind(this)}\n            />\n          </div>\n\n          <div className=\"nt-row\">\n            <div className=\"nt-row-item nt-left-row-padding nl-label\">\n              <Text>Duration</Text>\n            </div>\n            <div className=\"nt-row-item nt-right-row-padding nt-right-col\">\n              <Select\n                options={TERMS.filter(item => item <= maxDuration).map(\n                  item => '' + item + this.getMonthText()\n                )}\n                selected={selectedDuration + this.getMonthText()}\n                onChange={this.handleOnDurationChange.bind(this)}\n              />\n            </div>\n          </div>\n\n          <div>\n            <RangeSelector\n              min={TERMS[0]}\n              max={maxDuration}\n              value={selectedDuration}\n              onChange={this.handleOnDurationChangeFromNum.bind(this)}\n            />\n          </div>\n        </div>\n\n        <div className=\"nt-font-2 nt-mt-2 nt-mb-2 nt-roi\">\n          <Text>interest</Text> {rateOfInterest}\n        </div>\n\n        <div className=\"nt-row nt-ma-2 nl-flex-center\">\n          <div className=\"nt-row-item text-right nt-row-item nt-link\">\n            <a href=\"https://new10.com/\" className=\"nl-primary-link\">\n              <Text>check.link</Text>\n            </a>\n          </div>\n          <div>\n            <button className=\"nl-primary-btn\">\n              <Text>check.link</Text>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"nl-footer-text\">\n          <Text>footer.description1</Text>\n          <b>\n            <Text>footer.description2</Text>\n          </b>\n          <Text>footer.description3</Text>\n        </div>\n      </div>\n    );\n  }\n\n  getMonthText() {\n    return this.props.intl.formatMessage({\n      id: 'months'\n    });\n  }\n}\n\nconst mapStateToText = state => ({\n  selectedTarget: state.appReducer.selectedTarget,\n  businessForm: state.appReducer.businessForm,\n  maxFinancingValue: state.appReducer.maxFinancingValue,\n  maxDuration: state.appReducer.maxDuration,\n  selectedDuration: state.appReducer.selectedDuration,\n  selectedAmount: state.appReducer.selectedAmount,\n  rateOfInterest: state.appReducer.rateOfInterest\n});\n\nexport const mapDispatch = dispatch => ({\n  appError: message => dispatch(appError(message)),\n  changeTarget: target => dispatch(changeTarget(target)),\n  changeBusinessForm: businessForm =>\n    dispatch(changeBusinessForm(businessForm)),\n  changeFinancingValue: value => dispatch(changeFinancingValue(value)),\n  changeDurationValue: duration => dispatch(changeDurationValue(duration))\n});\n\nexport default connect(\n  mapStateToText,\n  mapDispatch\n)(injectIntl(Home));\n","export const appError = message => ({\n  type: 'APPLICATION_ERROR',\n  message\n});\n\nexport const changeTarget = selectedTarget => ({\n  type: 'SELECT_TARGET_CHANGE',\n  selectedTarget\n});\n\nexport const changeBusinessForm = businessForm => ({\n  type: 'BUSINESS_FROM_TARGET_CHANGE',\n  businessForm\n});\n\nexport const changeFinancingValue = financingValue => ({\n  type: 'FINANCING_VALUE_CHANGE',\n  financingValue\n});\n\nexport const changeDurationValue = durationValue => ({\n  type: 'DURATION_VALUE_CHANGE',\n  durationValue\n});\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport locale_en from 'react-intl/locale-data/en';\nimport locale_nl from 'react-intl/locale-data/nl';\n\nimport rootReducer from './reducers';\nimport './App.scss';\nimport Home from './pages/Home';\nimport messages_nl from './translations/nl.json';\nimport messages_en from './translations/en.json';\nimport { getLanguage } from './utils';\nimport { SUPPORTED_LANGUAGES } from './utils/constants';\n\nconst messages = {\n  nl: messages_nl,\n  en: messages_en\n};\n\naddLocaleData([...locale_en, ...locale_nl]);\n\nconst store = createStore(rootReducer);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: getLanguage()\n    };\n  }\n\n  handleOnLangChange() {\n    this.setState({\n      ...this.state,\n      lang:\n        this.state.lang === SUPPORTED_LANGUAGES[0]\n          ? SUPPORTED_LANGUAGES[1]\n          : SUPPORTED_LANGUAGES[0]\n    });\n  }\n\n  render() {\n    const { lang } = this.state;\n    return (\n      <Provider store={store}>\n        <IntlProvider locale={lang} messages={messages[lang]}>\n          <div className=\"nt-app\">\n            <Home onChangeLang={this.handleOnLangChange.bind(this)} />\n          </div>\n        </IntlProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}